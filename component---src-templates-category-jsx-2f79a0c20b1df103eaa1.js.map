{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","MainLayout","children","name","content","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","react__WEBPACK_IMPORTED_MODULE_2___default","map","post","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","key"],"mappings":"yQAOqBA,4FACnBC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,MAAK,sBAAwBd,EAAxB,OAAuCe,IAAOC,YAErDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAab,UAAWA,UAVYc,IAAMC,WAkBvCC,EAAS,wCCzBtB,IAAML,EAAS,CACbC,UAAW,+KACXK,eAAgB,iBAChBC,aAAc,iBACdC,SAAU,uBACVC,QAAS,+BACTC,WAAY,KACZC,gBAAiB,+KACjBC,QAAS,GACTC,YAAa,GACbC,kBAAmB,GACnBC,gBAAiB,GACjBC,sBAAuB,GACvBC,eAAgB,aAChBC,WAAY,aACZC,SAAU,gBACVC,UAAW,IACXC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,gBACE,sPAEFC,UAAW,CACT,CACEC,MAAO,SACPC,IAAK,oDACLC,cAAe,gBAEjB,CACEF,MAAO,UACPC,IAAK,6BACLC,cAAe,iBAEjB,CACEF,MAAO,QACPC,IAAK,0BACLC,cAAe,mBAGnBC,UAAW,kCACXC,WAAY,UACZC,gBAAiB,WAMO,MAAtB/B,EAAOU,WACTV,EAAOU,WAAa,GAGpBV,EAAOU,WAAP,IAAwBV,EAAOU,WAAWsB,QAAQ,WAAY,IAI9B,MAA9BhC,EAAOS,QAAQwB,QAAQ,KACzBjC,EAAOS,QAAUT,EAAOS,QAAQyB,MAAM,GAAI,IAGxClC,EAAOY,SAAiC,MAAtBZ,EAAOY,QAAQ,KACnCZ,EAAOY,QAAP,IAAqBZ,EAAOY,SAE9BuB,EAAOC,QAAUpC,4IC1DIqC,oGACnBrD,OAAA,WAAS,IACCsD,EAAapD,KAAKC,MAAlBmD,SACR,OACE7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAM4C,KAAK,cAAcC,QAASxC,IAAOW,mBAE1C2B,OAR+BnC,IAAMC,sHCFxCqC,oGACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXAzD,KAAKC,MAAME,UAAUuD,QAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCtD,MAAO8C,EAASG,KAAKI,YAAYrD,MACjCuD,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,eAGvBb,KAET3D,OAAA,WACE,IAAM2D,EAAWzD,KAAKwD,cACtB,OACEe,EAAA/D,EAAAC,cAAA,WAEEgD,EAASe,IAAI,SAAAC,GAAI,OACfF,EAAA/D,EAAAC,cAACiE,EAAA,KAAD,CAAMC,GAAIF,EAAKZ,KAAMe,IAAKH,EAAK5D,OAC7B0D,EAAA/D,EAAAC,cAAA,UAAKgE,EAAK5D,eAvBII,IAAMC,WA+BjBqC","file":"component---src-templates-category-jsx-2f79a0c20b1df103eaa1.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Galeria Obrazu | Umieścimy Twoją grafikę na torbach ekologicznych, torbach papierowych, chorągiewkach papierowych, kalenadarzach trójdzielnych. Zaufaj naszej Galeri Obrazu!\", // Site title.\n  siteTitleShort: \"Galeria Obrazu\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Galeria Obrazu\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"http://galeriaobrazu.com.pl/\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/#\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"Galeria Obrazu | Umieścimy Twoją grafikę na torbach ekologicznych, torbach papierowych, chorągiewkach papierowych, kalenadarzach trójdzielnych. Zaufaj naszej Galeri Obrazu!\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"\", // Path to the RSS file.\n  siteFBAppID: \"\", // FB Application ID for using app insights\n  googleAnalyticsID: \"\", // GA tracking ID.\n  disqusShortname: \"\", // Disqus shortname.\n  postDefaultCategoryID: \"\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userEmail: \"#\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"\", // User location to display in the author segment.\n  userAvatar: \"\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2019. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.scss\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}